/*
 * WARNING: this is an autogenerated file and will be overwritten by
 * the extension interface script.
 */

#include "s3eExt.h"
#include "IwDebug.h"
#include "s3eDevice.h"


#include "Heyzap.h"


// Define S3E_EXT_SKIP_LOADER_CALL_LOCK on the user-side to skip LoaderCallStart/LoaderCallDone()-entry.
// e.g. in s3eNUI this is used for generic user-side IwUI-based implementation.
#ifndef S3E_EXT_SKIP_LOADER_CALL_LOCK
#if defined I3D_ARCH_MIPS || defined S3E_ANDROID_X86 || (defined(WINAPI_FAMILY) && (WINAPI_FAMILY == WINAPI_FAMILY_PHONE_APP)) || defined I3D_ARCH_NACLX86_64
// For platforms missing stack-switching (MIPS, WP8, Android-x86, NaCl, etc.) make loader-entry via LoaderCallStart/LoaderCallDone() on the user-side.
#define LOADER_CALL_LOCK
#endif
#endif


#include "Heyzap_interface.h"

static HeyzapFuncs g_Ext;
static bool g_GotExt = false;
static bool g_TriedExt = false;
static bool g_TriedNoMsgExt = false;

static bool _extLoad()
{
    if (!g_GotExt && !g_TriedExt)
    {
        s3eResult res = s3eExtGetHash(0x1df9ed6, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        else
            s3eDebugAssertShow(S3E_MESSAGE_CONTINUE_STOP_IGNORE,                 "error loading extension: Heyzap");

        g_TriedExt = true;
        g_TriedNoMsgExt = true;
    }

    return g_GotExt;
}

static bool _extLoadNoMsg()
{
    if (!g_GotExt && !g_TriedNoMsgExt)
    {
        s3eResult res = s3eExtGetHash(0x1df9ed6, &g_Ext, sizeof(g_Ext));
        if (res == S3E_RESULT_SUCCESS)
            g_GotExt = true;
        g_TriedNoMsgExt = true;
        if (g_TriedExt)
            g_TriedExt = true;
    }

    return g_GotExt;
}

s3eBool HeyzapAvailable()
{
    _extLoadNoMsg();
    return g_GotExt ? S3E_TRUE : S3E_FALSE;
}

s3eResult HeyzapRegister(HeyzapCallback cbid, s3eCallback fn, void* userData)
{
    IwTrace(HEYZAP_VERBOSE, ("calling Heyzap[0] func: HeyzapRegister"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_HeyzapRegister);
#endif

    s3eResult ret = g_Ext.m_HeyzapRegister(cbid, fn, userData);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_HeyzapRegister);
#endif

    return ret;
}

s3eResult HeyzapUnRegister(HeyzapCallback cbid, s3eCallback fn)
{
    IwTrace(HEYZAP_VERBOSE, ("calling Heyzap[1] func: HeyzapUnRegister"));

    if (!_extLoad())
        return S3E_RESULT_ERROR;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_HeyzapUnRegister);
#endif

    s3eResult ret = g_Ext.m_HeyzapUnRegister(cbid, fn);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_HeyzapUnRegister);
#endif

    return ret;
}

void HeyzapStart(const char* pubId)
{
    IwTrace(HEYZAP_VERBOSE, ("calling Heyzap[2] func: HeyzapStart"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_HeyzapStart);
#endif

    g_Ext.m_HeyzapStart(pubId);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_HeyzapStart);
#endif

    return;
}

void HeyzapFetchInterstitial(const char* tag)
{
    IwTrace(HEYZAP_VERBOSE, ("calling Heyzap[3] func: HeyzapFetchInterstitial"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_HeyzapFetchInterstitial);
#endif

    g_Ext.m_HeyzapFetchInterstitial(tag);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_HeyzapFetchInterstitial);
#endif

    return;
}

void HeyzapShowInterstitial(const char* tag)
{
    IwTrace(HEYZAP_VERBOSE, ("calling Heyzap[4] func: HeyzapShowInterstitial"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_HeyzapShowInterstitial);
#endif

    g_Ext.m_HeyzapShowInterstitial(tag);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_HeyzapShowInterstitial);
#endif

    return;
}

void HeyzapFetchVideo(const char* tag)
{
    IwTrace(HEYZAP_VERBOSE, ("calling Heyzap[5] func: HeyzapFetchVideo"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_HeyzapFetchVideo);
#endif

    g_Ext.m_HeyzapFetchVideo(tag);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_HeyzapFetchVideo);
#endif

    return;
}

void HeyzapShowVideo(const char* tag)
{
    IwTrace(HEYZAP_VERBOSE, ("calling Heyzap[6] func: HeyzapShowVideo"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_HeyzapShowVideo);
#endif

    g_Ext.m_HeyzapShowVideo(tag);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_HeyzapShowVideo);
#endif

    return;
}

void HeyzapFetchRewarded(const char* tag)
{
    IwTrace(HEYZAP_VERBOSE, ("calling Heyzap[7] func: HeyzapFetchRewarded"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_HeyzapFetchRewarded);
#endif

    g_Ext.m_HeyzapFetchRewarded(tag);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_HeyzapFetchRewarded);
#endif

    return;
}

void HeyzapShowRewarded(const char* tag)
{
    IwTrace(HEYZAP_VERBOSE, ("calling Heyzap[8] func: HeyzapShowRewarded"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_HeyzapShowRewarded);
#endif

    g_Ext.m_HeyzapShowRewarded(tag);

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_HeyzapShowRewarded);
#endif

    return;
}

void HeyzapStartTestActivity()
{
    IwTrace(HEYZAP_VERBOSE, ("calling Heyzap[9] func: HeyzapStartTestActivity"));

    if (!_extLoad())
        return;

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallStart(S3E_TRUE, (void*)g_Ext.m_HeyzapStartTestActivity);
#endif

    g_Ext.m_HeyzapStartTestActivity();

#ifdef LOADER_CALL_LOCK
    s3eDeviceLoaderCallDone(S3E_TRUE, (void*)g_Ext.m_HeyzapStartTestActivity);
#endif

    return;
}
